---
title: Upgrade Preparation Checklist for PCF v2.4
owner: Ops Manager
---

This topic serves as a checklist for preparing to upgrade Pivotal Cloud Foundry (PCF) from v2.3 to v2.4.

This topic contains important preparation steps that you must follow before beginning your upgrade. Failure to follow these instructions may jeopardize your existing deployment data and cause the upgrade to fail.

After completing the steps in this topic, you can continue to [Upgrading Pivotal Cloud Foundry](../customizing/upgrading-pcf.html).

<p class="note warning"><b>Warning:</b> Pivotal does not recommend that you skip minor versions when upgrading PCF. Skipping minor versions when upgrading PCF may result in breaking changes. To avoid additional breaking changes, upgrade PCF to the minor version that directly follows your current version of PCF.</p>


## <a id="back-up-your-pcf-deployment"></a> Back Up Your PCF Deployment

Pivotal recommends backing up your PCF deployment before upgrading, to restore in the case of failure. To do this, follow the instructions in the [Backing Up Pivotal Cloud Foundry with BBR](../customizing/backup-restore/backup-pcf-bbr.html) topic.


## <a id='decryption-passphrase'></a> Find Your Decryption Passphrase for Ops Manager

To complete the Ops Manager upgrade, you must have your Ops Manager decryption passphrase. You defined this decryption passphrase during the initial installation of Ops Manager.


## <a id="review-pas-release-notes"></a> Review Changes in PCF v2.4

Review each of the following links to understand the changes in the new release, such as new features, known issues, and breaking changes.

* **Release Notes**
	* [Ops Manager Release v2.4 Release Notes](../../pcf-release-notes/opsmanager-rn.html)
	* [PAS v2.4 Release Notes](../../pcf-release-notes/runtime-rn.html)
* **Known Issues**
	* [Ops Manager v2.4 Known Issues](../../pcf-release-notes/opsmanager-rn.html#known-issues)
	* [PAS v2.4 Known Issues](../../pcf-release-notes/runtime-rn.html)
	* The following Pivotal Knowledge Base (KB) articles describe known issues for **PCF v2.4**:
		* [BOSH deployments using Xenial Stemcell sometimes have the wrong hostname using VM CID](https://community.pivotal.io/s/article/bosh-deployments-using-xenial-stemcell-sometimes-have-the-wrong-hostname-using-vm-cid)
		* [PCF Advisory - Internal Certificates Expires 2 Years After the Installation](https://community.pivotal.io/s/article/PCF-Advisory--Internal-Certificates-Expires-2-Years-After-the-Installation)
		* [BOSH health check tasks fails to acquire lock](https://community.pivotal.io/s/article/bosh-health-check-tasks-fails-to-acquire-lock)
		* [SCS deploy-service-broker errands fail in 2.0.4 when secure credential are enabled](https://community.pivotal.io/s/article/scs-deploy-service-broker-errands-fails-in-2-0-4-when-secure-credential-are-enabled)
		* [Deployments fail with IP Reservation conflicts when Healthwatch or On Demand Service tiles are installed](https://community.pivotal.io/s/article/deployments-fail-with-ip-reservation-conflicts-when-healthwatch-or-on-demand-service-tiles-are-installed)
		* [How to audit the admin trails for Ops Manager in PCF 2.4](https://community.pivotal.io/s/article/how-to-audit-the-admin-trails-for-ops-manager)
		* [PCF upgrade fails with StacklessAndStackfulMatchingBuildpacksExistError](https://community.pivotal.io/s/article/pcf-upgrade-fails-with-stacklessandstackfulmatchingbuildpacksexisterror)
		* [Missing environment variables when using PAS 2.3+ and the cflinuxfs3 stack](https://community.pivotal.io/s/article/missing-environment-variables-when-using-pas-2-3-and-the-cflinuxfs3-stack)
		* [Enabling TLS from the Gorouter to application instances results in bad routes in PAS 2.3+](https://community.pivotal.io/s/article/enabling-tls-from-the-gorouter-to-application-instances-results-in-bad-routes)
* **Breaking Changes**
	* [PCF v2.4 Breaking Changes](../../pcf-release-notes/breaking-changes.html)
* **KPI Changes**
	* [KPI Changes from PCF v2.3 to v2.4](../monitoring/index.html#new)
* **Diego Network Communications**:
	* [Diego Network Communications](../../security/networking/diego-network-paths.html)


## <a id='migrate-database'></a> Migrate Internal Databases to Percona MySQL

PAS v2.4 uses a Percona server. If your PAS v2.3 uses the MariaDB infrastructure, you must migrate your databases to Percona before you can upgrade to PAS v2.4.

To migrate your databases to Percona, see [Migrating to Internal Percona MySQL](https://docs.pivotal.io/pivotalcf/2-3/opsguide/migrate-percona-mysql.html).


## <a id="tiles-addons"></a> Update Tiles and Add-Ons

The following section describes changes you must make to your product tiles and add-ons before upgrading PCF.

### <a id="compatibility"></a> Review Tile Compatibility

Before you upgrade to PCF v2.4, check whether the service tiles that you currently have deployed on PCF v2.3 are compatible with PCF v2.4.

To check PCF versions supported by a service tile, either from Pivotal or a Pivotal partner:

* Navigate to the tile's download page on [Pivotal Network](https://network.pivotal.io).
* Select the tile version in the **Releases** dropdown.
* See the **Depends On** section under **Release Details**. For more information, refer to the tile's release notes.

If the currently-deployed version of a tile is not compatible with PCF v2.4, you must upgrade the tile to a compatible version before you upgrade PCF. You do not need to upgrade tiles that are compatible with both PCF v2.3 and v2.4.

Some partner service tiles may be incompatible with PCF v2.4. Pivotal works with partners to ensure their tiles are updated to work with the latest versions of PCF. For more information about which partner service release compatibility, review the **Depends On** section of the partners tile download page, the partners services release documentation in [Pivotal Documentation](https://docs.pivotal.io), or contact the partner organization that produces the service tile.

The [Product Compatibility Matrix](http://docs.pivotal.io/resources/product-compatibility-matrix.pdf) provides an overview of which PCF versions support which versions of the most popular service tiles from Pivotal.

#### <a id="env"></a> Environment Details

Pivotal provides the empty table below as a model to print out or adapt for recording and tracking the tile versions that you have deployed in all of your environments.

|                                                                         |                                                                  | **Sandbox** | **Non-Prod** | **Prod** | **Other...** |
| ----------------------------------------------------------------------- | ---------------------------------------------------------------- | ------------ | ------------- | -------- | ------------ |
| **Pivotal Cloud Foundry**                                                   | [Ops Manager](https://network.pivotal.io/products/ops-manager) |              |               |          |              |
|                                                                         | [Pivotal Application Service](https://network.pivotal.io/products/elastic-runtime) (PAS)     |              |               |          |              |
| **Pivotal Cloud Foundry Services**         | [MySQL v2](https://network.pivotal.io/products/pivotal-mysql)                                                            |              |               |          |              |
|                                                                         | [Redis](https://network.pivotal.io/products/p-redis)                                                            |              |               |          |              |
|                                                                         | [RabbitMQ](https://network.pivotal.io/products/p-rabbitmq)                                                         |              |               |          |              |
|                                                                         | [Single Sign On](https://network.pivotal.io/products/p-identity) (SSO)                                                              |              |               |          |              |
|                                                                         | [Spring Cloud Services](https://network.pivotal.io/products/p-spring-cloud-services)                                            |              |               |          |              |
|                                                                         | [Concourse](https://network.pivotal.io/products/p-concourse)                                                        |              |               |          |              |
|                                                                         | ...                                                              |              |               |          |              |
| **Pivotal Cloud Foundry Partner Services** | [New Relic](https://network.pivotal.io/products/p-new-relic)                                                        |              |               |          |              |
|                                                                         | ...                                                           |              |               |          |              |

### <a id="upgrade-service-tiles"></a> Upgrade Services Tiles

Upgrade all service tiles to versions that are compatible with PCF v2.4. Service tiles are add-on products you install alongside your runtime. For example, MySQL for PCF, PCF Healthwatch, and RabbitMQ are service tiles.

Do not upgrade runtime tiles, such as PAS, PAS for Windows (PASW), or Pivotal Container Service (PKS), at this time.

Review the [Compatibility Matrix](http://docs.pivotal.io/resources/product-compatibility-matrix.pdf) and tile documentation to check version compatibility.

### <a id="upgrade-mysql"></a> Upgrade MySQL for PCF from v1 to v2

MySQL for PCF v1 is not compatible with PCF v2.4.

If you are running MySQL for PCF v1.10 or earlier,
you must do the following before you upgrade to PCF v2.4:

1. Install MySQL for PCF v2.
   For more information, see [Installing and Configuring MySQL for PCF](https://docs.pivotal.io/p-mysql/install-config.html).
2. Migrate your service instances from v1 to v2.
   For more information, see [Migrating Data in MySQL for PCF](https://docs.pivotal.io/p-mysql/migrate-data.html).
3. Delete the MySQL for PCF v1 tile.


### <a id='patch'></a> (Optional) Install PAS v2.3.2 or Later to Avoid Autoscaler Downtime

App Autoscaler consumes a new log-cache API. If you are running PAS v2.3.0 or v2.3.1, upgrading directly to v2.4 renders the App Autoscaler intermittently unusable until the upgrade completes.

Updating to PAS v2.3.2 or later before upgrading to PAS v2.4 prevents App Autoscaler downtime.

### <a id='stale-tls-routes'></a> (Optional) Install PAS v2.3.14 or Later to Avoid Misrouting Apps

To prevent misrouting of apps, upgrade to PAS v2.3.14 or later.

Stale routes can persist in PAS v2.3 deployments that are configured to use TLS or mTLS
in the **Router application identity verification** setting of **Application Containers**.

To fix this issue, do the following:

1. Log in to Ops Manager.
1. Update the PAS tile to PAS v2.3.14 or later.
1. In the PAS tile, select **Application Containers**.
1. View the settings in **Router application identity verification**.
1. Verify that either **Router uses TLS to verify application identity** or **Router and applications use mutual TLS to verify each other's identity** is selected.
1. Select the **Prune Routes on TTL Expiry for TLS Backends** checkbox.
1. Click **Review Pending Changes**.
1. Click **Apply Changes**.

<p class="note"><strong>Note</strong>: When you upgrade PAS, make sure you upgrade to PAS v2.4.10 or later to preserve this configuration.</p>

For more information, see [Intermittent Misrouting of Apps in Large PCF Foundations](https://docs.pivotal.io/pivotalcf/2-3/pcf-release-notes/runtime-rn.html#stale-routes) in the _PAS v2.3 Release Notes_.

### <a id='bosh-cli'></a> Install BOSH CLI v5.3.1 or Later

Install [BOSH CLI v5.3.1](https://github.com/cloudfoundry/bosh-cli/releases/tag/v5.3.1) to avoid IP conflict errors that cause BOSH healthcheck tasks to fail to acquire locks. For more information, see [BOSH health check tasks fails to acquire lock](https://community.pivotal.io/s/article/bosh-health-check-tasks-fails-to-acquire-lock) in the Pivotal Knowledge Database.
### <a id='bosh-director'></a> Configure BOSH Director

With each release of a new PCF version, BOSH Director may require specific updates before upgrading to the new version. See the following for what action to take before upgrading to PCF v2.4:

1. Check the required machine specifications for Ops Manager v2.4. These specifications are specific to your IaaS. If these specifications do not match your existing Ops Manager, modify the values of your Ops Manager VM instance. For example, if the boot disk of your existing Ops Manager is 50&nbsp;GB and the new Ops Manager requires 100&nbsp;GB, then increase the size of your Ops Manager boot disk to 100&nbsp;GB.

### <a id='pas'></a> Configure PAS

With each release of a new PCF version, PAS may require specific updates before upgrading to the new version. See the following sections for what action to take before upgrading to PCF v2.4:

#### <a id="disable-unused-errands"></a> (Optional) Disable Unused Errands

To save upgrade time, you can disable unused PAS post-deploy errands. See the [Post-Deploy Errands](https://docs.pivotal.io/tiledev/2-4/tile-errands.html#post-deploy) section of the Errands topic for details.
Only disable these errands if your environment does not need them.

In some cases, if you have previously disabled lifecycle errands for any installed product to reduce deployment time, you may want to re-enable these errands before upgrading. For more information, see the [Adding and Deleting Products](../customizing/add-delete.html#add-import) topic.

#### <a id="cipher"></a> Confirm Cipher Suites

Ensure that the **TLS Cipher Suites for Router** field contains a cipher suite supported by both Gorouter and CAPI. For details, see [Removal of Default Ciphers Causes Downtime when Upgrading from 2.2 to 2.3 and from 2.3 to 2.4](https://docs.pivotal.io/pivotalcf/2-4/pcf-release-notes/runtime-rn.html#cipher-downtime).

#### <a id="groot-gc"></a> Configure Diego Cell Garbage collection

In the PAS tile **Application Container** pane, if **Docker Images Disk-Cleanup Scheduling on Cell VMs** is set to **Clean up disk-space once threshold is reached** and the value of **Threshold of Disk-Used (MB)** below has been changed from the default of `10240`, then operators need to pick a new threshold. If the scheduling is set to **Never clean up...** or **Routinely clean up...***, or the threshold value is set to the default, then the no action is necessary, and any threshold will migrate to a sensible value. For more information see [Options for Disk Cleanup](https://docs.pivotal.io/pivotalcf/2-4/opsguide/config-cell-cleanup.html).

#### <a id="route-integrity"></a> Configure Gorouter with TLS

Before upgrading to PAS v2.4, you must secure the Gorouter with TLS or mutual TLS for PAS and Isolation Segment tiles.

The following sections describe how to enable routing with TLS or mutual TLS, scale the Diego cell VM CPU and RAM, and scale the Gorouter. If you do not have enough RAM on your Diego cell VM after enabling TLS routing, you are unable to stage tasks and app instances. App instances may also stop running. If you do not have enough memory and CPU on the Gorouters, latency may increase and throughput may decrease.

<p class="note"><strong>Note:</strong> Gorouter with TLS or mutual TLS is not supported in the PAS for Windows tile.</p>

<strong><a id="enable-tls"></a> Step 1: Enable TLS or Mutual TLS Routing</strong>

To enable TLS or mutual TLS routing, do the following:

1. From the **Ops Manager Installation Dashboard**, go to the PAS tile.

1. Go to the **Application Containers** pane.

1. Under **Router application identity verification**, select either of the following options:
  - **Router uses TLS to verify application identity**
  - **Router and applications use mutual TLS to verify each other's identity**

1. Click **Save**.

<strong><a id="ram-size"></a> Step 2: Determine Number of App Instances</strong>

Before you scale your Diego cell VM to handle TLS routing, you must determine the number of
app instances running on your deployment.

See the following methods for how you can count your app instances. Choose the method that
corresponds to your use case.

* **Deployments without Isolation Segments**
  	1. Access your platform metrics with your configured monitoring tool or with cf CLI
  	Firehose nozzle plugin. For more information about the CLI Firehose nozzle plugin, see
  	[Installing the Loggregator Firehose Plugin for cf CLI](../loggregator/cli-plugin.html).
  	For more information about configuring a monitoring system, see [Selecting and Configuring a Monitoring System](../monitoring/metrics.html).
  	1. Find the `LRPsDesired` metric of the `bbs` job on the Diego Database VM. See the following example:
		<pre class="terminal">origin:"bbs" eventType:ValueMetric
		timestamp:1541543212057232344 deployment:"cf" job:"diego\_database"
		index:"b1f0c6d8-274b-4cfc-bfa1-a6feeb351802" ip:"10.0.4.10"
		tags:&lt; key:"instance\_id" value:"b1f0c6d8-274b-4cfc-bfa1-a6feeb351802" >
		tags:&lt; key:"source\_id" value:"bbs" > valueMetric:&lt; name:"LRPsDesired"
		<span style="color: #5FABFF">value:200</span> unit:"Metric" ></pre>
	1. Record the `value` of the `LRPsDesired` for each instance of the `bbs`
	job. You need the `value` for the procedure in the next section.

* **Deployments with Isolation Segments**
  	1. Access your platform metrics with your configured monitoring tool or with cf CLI
  	Firehose nozzle plugin. For more information about the CLI Firehose nozzle plugin, see
  	[Installing the Loggregator Firehose Plugin for cf CLI](../loggregator/cli-plugin.html).
  	For more information about configuring a monitoring system, see [Selecting and Configuring a Monitoring System](../monitoring/metrics.html).
  	1. Find all `ContainerCount` metrics of the `rep` job of each Diego cell VM. See the following example:
   		<pre class="terminal">origin:"rep" eventType:ValueMetric
		timestamp:1541543910092859448 deployment:"cf" job:"diego\_cell"
		index:"8007afda-3bff-4856-857f-a47a43cbf994" <span style="color:#5FABFF">ip:"10.0.4.18"</span>
		tags:&lt; key:"instance_id" value:"8007afda-3bff-4856-857f-a47a43cbf994" >
		tags:&lt; key:"source\_id" value:"rep" > valueMetric:&lt; name:
		"ContainerCount" <span style="color:#5FABFF">value:200</span> unit:"Metric" ></pre>
	1. For each `ContainerCount` metric, record the `value` of the `ContainerCount`
	and the `ip` of the `job`.

<strong><a id="scale-diego-cell"></a> Step 3: Scale Diego Cell VM</strong>

To support TLS or mutual TLS routing, you must have enough CPU and RAM for your Diego cell VM. TLS
routing requires an additional 32&nbsp;MB of RAM on your Diego cell per app instance.

To calculate and configure the amount of RAM you need for your Diego cell, choose one of the following methods
for your use case:

* **Deployments without Isolation Segments**
<p>For your PAS tile, do the following:</p>
   1. Go to the **Resource Config** pane.
   1. In the **Diego Cell** row, see your current **VM Type** with the amount of RAM you currently have.
   1. Multiply the `value` you recorded in the previous section by 32. Add your solution
   to the amount of RAM you currently have.
   1. Select your new **VM Type** based on the amount of RAM you need.
   	<p class="note"><strong>Note</strong>: Alternatively, you can scale your Diego Cell VM by increasing the instance count to support the amount of RAM you need.</p>
   1. Click **Save**.
* **Deployments with Isolation Segments**
<p>For each PAS and Isolation Segment tile in your foundation, do the following:</p>
   1. Go to the **Status** tab and see the IP of your Diego cell. To determine the `value`
   that corresponds to this tile, match the IP to the `ip`
   metric you recorded in the previous section.
   1. Go to the **Resource Config** pane of the the tile.
   1. In the **Diego Cell** row, see your current **VM Type** with the amount of RAM you currently have.
   1. Multiply the `value` for this tile by 32. Add your solution
   to the amount of RAM you currently have.
   1. Select your new **VM Type** based on the amount of RAM you need.
   	<p class="note"><strong>Note</strong>: Alternatively, you can scale your Diego Cell VM by increasing the instance count to support the amount of RAM you need.</p>
   1. Click **Save**.

<strong><a id="scale-gorouter"></a> Step 4: Scale Gorouters</strong>

You may see an increase of memory and CPU usage for your Gorouters after enabling TLS routing. If the memory and CPU usage of the Gorouters in your environment are close to the size limit, scale your Gorouters before enabling TLS routing.

For more information about scaling Gorouters, see [Router Performance Scaling Indicator](https://docs.pivotal.io/pivotalcf/2-4/monitoring/key-cap-scaling.html#router) in _Key Capacity Scaling Indicators_.

### <a id="stemcell-compat"></a> Check OS Compatibility of BOSH-Managed Add-Ons and Tiles

Before upgrading to PCF v2.4, operators who have deployed any PCF add-ons such as **IPsec for PCF**, **ClamAV for PCF**, or **File Integrity Monitoring for PCF** and who have deployed or are planning to deploy [Pivotal Application Service for Windows](../windows/index.html) must modify the add-on manifest to specify a compatible OS stemcell.

For example, **File Integrity Monitor for PCF** (FIM) is not supported on Windows. Therefore, the manifest must use an `include` directive to specify the target OS stemcell of `ubuntu-trusty` and `ubuntu-xenial`.

<p class="note"><strong>Note:</strong> To upgrade to a Xenial stemcell, see the documentation for each add-on and follow the instructions.</p>

To update an add-on manifest, do the following:

1. Locate your existing add-on manifest file. For example, for FIM, locate the `fim.yml` you uploaded to the Ops Manager VM.

1. Modify the manifest to include following `include` directive to your manifest:

    ```yml
      include:
        stemcell:
          - os: ubuntu-xenial
    ```

1. Upload the modified manifest file to your PCF deployment. For example instructions, see [Create the FIM Manifest](https://docs.pivotal.io/addon-fim/index.html#create-mfest).

If you use any other BOSH-managed add-ons in your deployment, you should verify OS compatibility for those component as well. For more information about configuring BOSH add-on manifests, see the [BOSH documentation](https://bosh.io/docs/runtime-config.html#addons).

### <a id="azure-blobstore-addon"></a> Check Backup and Restore External Blobstore Add-On

If you have enabled external blobstore backups for an Azure Blobstore using the [Blobstore Add-On](../../customizing/backup-restore/enabling-external-blobstore-backups.html#azure), you must update your runtime configuration to remove the `sdk-preview` add-on before upgrading to PCF v2.4. If you do not remove this job, upgrading PAS fails with the error:

<pre>
Preparing deployment: Preparing deployment (00:00:01)
  L Error: Colocated job 'azure-blobstore-backup-restorer' is already added to the instance group 'backup-restore'.
</pre>

After removing this job from your runtime configuration, ensure that the **Enable backup and restore** checkbox is enabled in the PAS tile > **File Storage** pane. See [External Azure Storage](../customizing/azure-er-config-terraform.html#external_azure) for instructions.


## <a id="cert-expiry"></a> Check Certificate Authority Expiration Dates

Depending on the requirements of your deployment, you may need to rotate your Certificate Authority (CA) certificates. The non-configurable certificates in your deployment expire every two years. You must regenerate and rotate them so that critical components do not face a complete outage.

<p class="note"><strong>Note:</strong> <%= vars.product_name %> uses SHA-2 certificates and hashes by default. You can convert existing SHA-1 hashes into SHA-2 hashes by rotating your <%= vars.ops_manager %> certificates using the procedure described in <a href="https://docs.pivotal.io/pivotalcf/<%= product_info['local_product_version'].to_s.sub('.','-') %>/security/pcf-infrastructure/rotate-saml-ca.html">Rotating Identity Provider SAML Certificates</a>.</p>

To retrieve information about all the RSA and CA certificates for the BOSH Director and other products in your deployment, you can use the `GET /api/v0/deployed/certificates?expires_within=TIME` request of the Ops Manager API.

In this request, the `expires_within` parameter is optional. Valid values for the parameter are `d` for days, `w` for weeks, `m` for months, and `y` for years. For example, to search for certificates expiring within one month, replace `TIME` with `1m`:

<pre class="terminal">$ curl "https://OPS-MAN-FQDN/api/v0/deployed/certificates?expires_within=1m" \
 -X GET \
 -H "Authorization: Bearer UAA_ACCESS_TOKEN"
</pre>

For information about regenerating and rotating CA certificates, see [Overview of Certificate Rotation](https://docs.pivotal.io/pivotalcf/<%= product_info['local_product_version'].to_s.sub('.','-') %>/security/pcf-infrastructure/api-cert-rotation.html).


## <a id="capacity"></a> Check the Capacity of Your Deployment

The following sections describe steps for ensuring your deployment has adequate capacity to perform the upgrade.

### <a id="confirm-om-disk"></a> Confirm Adequate Disk Space

<%= partial 'check_disk_before_upgrade' %>

### <a id="check-diego-cell-ram-and-disk"></a> Check Diego Cell RAM and Disk

Check that Diego cells have sufficient available RAM and disk capacity to support app containers.

The KPIs that monitor these these resources are are:

* `rep.CapacityRemainingMemory`
* `rep.CapacityRemainingDisk`

### <a id="adjust-diego-cell-limits"></a> Adjust Diego Cell Limits

If needed, adjust the maximum number of Diego cells that the platform can upgrade simultaneously, to avoid overloading the other cells. See [Limit PCF Component Instances During Restart](./configuring.html#limit-restart).

For PCF v1.10 and later, the maximum number of cells that can update at once, `max_in_flight` is 4%. This setting is configured in the BOSH manifest's Diego cell definition. See the [Prevent Overload](./configuring.html#limitations-considerations) section for details.

Review the [Diego Cell Metrics](../monitoring/kpi.html#cell) section of the KPI topic for more information about these KPIs.

### <a id="storage"></a> Review File Storage IOPS and Other Upgrade Limiting Factors

During the PCF upgrade process, a large quantity of data is moved around on disk.

To ensure a successful upgrade of PCF, verify that your underlying PAS file storage is performant enough to handle the upgrade. For more information about the configurations to evaluate, see [Upgrade Considerations for Selecting Pivotal Cloud Foundry Storage](../upgrading/configuring.html#file-storage).

In addition to file storage IOPS, consider additional existing deployment factors that can impact overall upgrade duration and performance:

|**Factor**|**Impact**|
|----------|----------|
|**Network latency**| Network latency can contribute to how long it takes to move app instance data to new containers. |
|**Number of ASGs**| A large number of [Application Security Groups](../concepts/asg.html) in your deployment can contribute to an increase in app instance container startup time. |
|**Number of app instances and application growth**| A large increase in the number of app instances and average droplet size since the initial deployment can increase the upgrade impact on your system. |

To review example upgrade-related performance measurements of an existing production Cloud Foundry deployment, see the [Pivotal Web Services Performance During Upgrade](../opsguide/pws_upgrade_load.html) topic.

### <a id="bosh-clean-up"></a> Run BOSH Clean-Up

Run `bosh -e ALIAS clean-up --all` to clean up old stemcells, releases, orphaned disks, and other resources before upgrade. This cleanup helps prevent the product and stemcell upload process from exceeding the BOSH Director's available persistent disk space.


## <a id="health"></a> Check the Health of Your Deployment

The following sections describe steps for ensuring your deployment is healthy before you perform the upgrade.

### <a id="collect-foundation-health-status"></a> Collect Foundation Health Status

For collecting foundation health status, Pivotal recommends PCF Healthwatch, which monitors and alerts on the current health, performance, and capacity of PCF. For more information, see the [PCF Healthwatch documentation](https://docs.pivotal.io/pcf-healthwatch/index.html).

If you are not using PCF Healthwatch, you can do some or all of the following to collect foundation health status:

* If your PCF deployment has external metrics monitoring set up, verify that VM CPU, RAM, and disk use levels are within reasonable levels.
* Run BOSH CLI commands to check system status:
	* `bosh -e ALIAS -d DEPLOYMENT_NAME instances --ps`. <p>`bosh instances` with the flags `--ps`, `--vitals`, or `--failing` highlights individual job failure.</p>
	* `bosh -e ALIAS vms --vitals`. This reveals VMs with high CPU, high memory, high disk utilization, and with `state` != `running`.
	* `bosh -e ALIAS -d DEPLOYMENT_NAME cck --report`
* Check Ops Manager GUI each PAS/Tiles the status page for CPU/RAM/DISK utilization
* Validate Ops Manager persistent disk usage is below 50%. If not, follow the procedure in [Confirm Adequate Disk Space](#confirm-om-disk).

(Optional) Check the logs for errors before proceeding with the upgrade. For more information, see [Viewing Logs in the Command Line Interface](../devguide/deploy-apps/streaming-logs.html#view).

### <a id="push-test-app"></a> Push and Scale a Test App

Check that a test app can be pushed and scaled horizontally, manually or through automated testing. This check ensures that the platform supports apps as expected before the upgrade.

### <a id="validate-installed-buildpacks"></a> Validate Installed Buildpacks

PAS includes a stack association feature for buildpacks. You can have multiple versions of the same buildpack for different stacks. For more information, see [cflinuxfs3 Stack and Compatible Buildpacks](https://docs.pivotal.io/pivotalcf/2-3/pcf-release-notes/runtime-rn.html#cflinuxfs3) in the PAS v2.3 Release Notes.

To avoid errors during upgrade, do the following:

* If you have multiple buildpacks with the same name, associate each of those buildpacks with a stack. For more information, see [PCF upgrade fails with StacklessAndStackfulMatchingBuildpacksExistError](https://community.pivotal.io/s/article/pcf-upgrade-fails-with-stacklessandstackfulmatchingbuildpacksexisterror).

* Unlock any default buildpacks that do not have an associated stack.

* Associate any custom or non-default buildpacks with a stack.

For more information about associating a stack with an existing buildpack, see [Managing Stack Association with the cf CLI](https://docs.pivotal.io/pivotalcf/2-4/buildpacks/stack-association.html#stack-cli).

### <a id="validate-mysql-cluster-health"></a> Validate MySQL Cluster Health

If you are running PAS MySQL as a cluster, run the `mysql-diag` tool to validate health of the cluster.

See the BOSH CLI v2 instructions in the [Running mysql-diag](https://docs.pivotal.io/pivotalcf/2-4/pas/mysql-diag.html) topic.

### <a id="check-health"></a> Review Pending and Recent Changes

1. Confirm there are no outstanding changes in Ops Manager or any other tile. All tiles should be **green**. Click **Review Pending Changes**, then **Apply Changes** if necessary.

1. After applying changes, click **Recent Install Logs** to confirm that the changes completed cleanly:
    <pre>
    Cleanup complete
    {"type": "step\_finished", "id": "clean\_up\_bosh.cleaning\_up"}
    Exited with 0.
    </pre>


## <a id="export"></a> Export Your Installation

To export your installation, do the following:

1. In your Ops Manager v2.3 **Installation Dashboard**, click the account dropdown and select **Settings**.

    <%= image_tag("./images/upgrade_to_1.9.png") %>

1. On the **Settings** screen, select **Export Installation Settings** from the left menu, then click **Export Installation Settings**.

    <%= image_tag("./images/export_install_settings.png") %>

This exports the current PCF installation with all of its assets.

When you export an installation, the export contains the base VM images, necessary packages, and configuration settings, but does not include releases between upgrades if Ops Manager has already uploaded them to BOSH. When backing up PCF, you must take this into account by backing up the BOSH blobstore that contains the uploaded releases. BOSH Backup and Restore (BBR) backs up the BOSH blobstore. For more information, see [Backing Up Pivotal Cloud Foundry with BBR](../customizing/backup-restore/backup-pcf-bbr.html).

* The export time depends on the size of the exported file.
* Some browsers do not provide feedback on the status of the export process and might appear to hang.

<p class="note"><strong>Note:</strong> Some operating systems automatically unzip the exported installation. If this occurs, create a ZIP file of the unzipped export. Do not start compressing at the "installation" folder level. Instead, start compressing at the level containing the <code>config.yml</code> file:</p>

<%= image_tag("./images/compress.png") %>

<p class="note warning"><strong>WARNING:</strong> If you fail to perform the remedial steps for this issue, this upgrade process may corrupt your existing usage data.</p>


## <a id="next-steps"></a> Next Steps

Now that you have completed the Upgrade Preparation Checklist for PCF v2.4, continue to [Upgrading Pivotal Cloud Foundry](../customizing/upgrading-pcf.html).


## <a id="survey"></a> Complete Survey

Please take some time to help us improve this document by completing the [Upgrade Checklist Survey](https://docs.google.com/forms/d/e/1FAIpQLScf9KuTbF3B9CjldMGqQxF-GA72xMR0DGzaGmhX4uWMrD8pOA/viewform?c=0&w=1).
